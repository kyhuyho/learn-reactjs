{"ast":null,"code":"var _jsxFileName = \"D:\\\\Learn ReactJS\\\\my-app\\\\src\\\\contexts\\\\authContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useContext } from \"react\";\nimport { useState } from \"react\";\nimport { createContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nfunction AuthProvider(props) {\n  _s();\n  const [user, setUser] = useState({\n    userId: 1,\n    fullname: \"Tôm\",\n    email: \"tom@gmail.com\"\n  });\n  const value = {\n    user,\n    setUser\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 10\n  }, this);\n}\n_s(AuthProvider, \"tdZPo1RFsYqGaNeIQGM4yk/jXp0=\");\n_c = AuthProvider;\nfunction useAuth() {\n  _s2();\n  const context = useContext(AuthContext);\n  if (typeof context === \"undefined\") throw new Error(\"useAuth must be used within a CountProvider\");\n  return context;\n}\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport { AuthProvider, useAuth };\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["useContext","useState","createContext","AuthContext","AuthProvider","props","user","setUser","userId","fullname","email","value","useAuth","context","Error"],"sources":["D:/Learn ReactJS/my-app/src/contexts/authContext.js"],"sourcesContent":["import { useContext } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { createContext } from \"react\";\r\n\r\nconst AuthContext = createContext();\r\nfunction AuthProvider(props) {\r\n  const [user, setUser] = useState({\r\n    userId: 1,\r\n    fullname: \"Tôm\",\r\n    email: \"tom@gmail.com\",\r\n  });\r\n  const value = { user, setUser };\r\n  return <AuthContext.Provider value={value} {...props}></AuthContext.Provider>;\r\n}\r\nfunction useAuth() {\r\n  const context = useContext(AuthContext);\r\n  if (typeof context === \"undefined\")\r\n    throw new Error(\"useAuth must be used within a CountProvider\");\r\n  return context;\r\n}\r\nexport { AuthProvider, useAuth };\r\n"],"mappings":";;;AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,aAAa,QAAQ,OAAO;AAAC;AAEtC,MAAMC,WAAW,gBAAGD,aAAa,EAAE;AACnC,SAASE,YAAY,CAACC,KAAK,EAAE;EAAA;EAC3B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC;IAC/BO,MAAM,EAAE,CAAC;IACTC,QAAQ,EAAE,KAAK;IACfC,KAAK,EAAE;EACT,CAAC,CAAC;EACF,MAAMC,KAAK,GAAG;IAAEL,IAAI;IAAEC;EAAQ,CAAC;EAC/B,oBAAO,QAAC,WAAW,CAAC,QAAQ;IAAC,KAAK,EAAEI,KAAM;IAAA,GAAKN;EAAK;IAAA;IAAA;IAAA;EAAA,QAAyB;AAC/E;AAAC,GARQD,YAAY;AAAA,KAAZA,YAAY;AASrB,SAASQ,OAAO,GAAG;EAAA;EACjB,MAAMC,OAAO,GAAGb,UAAU,CAACG,WAAW,CAAC;EACvC,IAAI,OAAOU,OAAO,KAAK,WAAW,EAChC,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAChE,OAAOD,OAAO;AAChB;AAAC,IALQD,OAAO;AAMhB,SAASR,YAAY,EAAEQ,OAAO;AAAG;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}